use chess_wasm::chess::*;

#[test]
fn default_board_test() {
    let mut chess = Chess::new();

    chess.load_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1".to_string());

    #[rustfmt::skip]
    assert_eq!(
        [
            130, 132, 136, 160, 144, 136, 132, 130, 0, 0, 0, 0, 0, 0, 0, 0, 
            129, 129, 129, 129, 129, 129, 129, 129, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   0,   0,   0,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   0,   0,   0,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   0,   0,   0,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   0,   0,   0,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              1,   1,   1,   1,   1,   1,   1,   1, 0, 0, 0, 0, 0, 0, 0, 0, 
              2,   4,   8,  32,  16,   8,   4,   2, 0, 0, 0, 0, 0, 0, 0, 0
        ],
        chess.board
    );
}

#[test]
fn checkmate_board_test() {
    let mut chess = Chess::new();

    chess.load_fen("r3k2r/ppp2p1p/2n1p1p1/8/2B2P1q/2NPb1n1/PP4PP/R2Q3K w kq - 0 8".to_string());

    #[rustfmt::skip]
    assert_eq!(
        [
            130,   0,   0,   0, 144,   0,   0, 130, 0, 0, 0, 0, 0, 0, 0, 0, 
            129, 129, 129,   0,   0, 129,   0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0, 132,   0, 193,   0, 193,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   0,   0,   0,   0,   0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   8,   0,   0,  65,   0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 
              0,   0,   4,  65, 136,   0, 132,   0, 0, 0, 0, 0, 0, 0, 0, 0, 
              1,   1,   0,   0,   0,   0,   1,   1, 0, 0, 0, 0, 0, 0, 0, 0, 
              2,   0,   0,  32,   0,   0,   0,  16, 0, 0, 0, 0, 0, 0, 0, 0
        ],
        chess.board
    );
}
